# TODO: Prefix all env vars with service name
# TODO: Allow specifing the image tag to use
version: "3"

services:
  # base service builder
  builder:
    image: ethereumoptimism/builder
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.monorepo


  dtl:
    depends_on:
      - l2geth
    image: ethereumoptimism/data-transport-layer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.data-transport-layer
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      -  ./envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
        # used for setting the address manager address
        URL: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/addresses.json
        # connect to the 2 layers
        DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: https://rinkeby.infura.io/v3/
        DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://metis_l2_geth_mt_1.metisdao.sd.0:8545
        DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 420
    ports:
      - ${DTL_PORT:-7878}:7878

  l2geth:
    image: ethereumoptimism/l2geth
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth.aws
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: https://rinkeby.infura.io/v3/
        ROLLUP_STATE_DUMP_PATH: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/state-dump.latest.json
        # used for getting the addresses
        URL: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/addresses.json
        # connecting to the DTL
        ROLLUP_CLIENT_HTTP: http://data_transport_layer_mt_4.metisdao.sd.0:7878
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        ROLLUP_POLL_INTERVAL_FLAG: 30000ms
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546
  
  l2geth-peer:
    depends_on:
      - l2geth
    image: ethereumoptimism/l2geth-peer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth.peer.aws
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth-peer.sh
    env_file:
      - ./envs/geth-peer.env
    environment:
        ETH1_HTTP: https://rinkeby.infura.io/v3/
        ROLLUP_STATE_DUMP_PATH: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/state-dump.latest.json
        # used for getting the addresses
        URL: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/addresses.json
        # connecting to the DTL
        ROLLUP_CLIENT_HTTP: http://data_transport_layer_mt_4.metisdao.sd.0:7878
        L2_URL: http://metis_l2_geth_mt_1.metisdao.sd.0:8545
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        ROLLUP_POLL_INTERVAL_FLAG: 30000ms
        MVM_GAS_ORACLE_PRICE: 1000
        MVM_GAS_ORACLE_ADDRESS: "0x4200000000000000000000000000000000000006"
    ports:
      - ${L2GETH_HTTP_PORT:-10545}:8545
      - ${L2GETH_WS_PORT:-10546}:8546
      - ${L2GETH_NODE_PORT:-30304}:30303
  
  relayer:
    depends_on:
      - l2geth
    image: ethereumoptimism/message-relayer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.message-relayer
    entrypoint: ./relayer.sh
    environment:
        L1_NODE_WEB3_URL: https://rinkeby.infura.io/v3/
        L2_NODE_WEB3_URL: http://127.0.0.1:8545
        URL: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/addresses.json
        # a funded hardhat account
        L1_WALLET_KEY: "0x754fde3f5e60ef2c7649061e06957c29017fe21032a8017132c0078e37f6193c"
        RETRIES: 60
        POLLING_INTERVAL: 500
        GET_LOGS_INTERVAL: 500

  batch_submitter:
    depends_on:
      - l2geth
    image: ethereumoptimism/batch-submitter
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.batch-submitter
    entrypoint: ./batches.sh
    env_file:
      - ./envs/batches.env
    environment:
        L1_NODE_WEB3_URL: https://rinkeby.infura.io/v3/
        L2_NODE_WEB3_URL: http://127.0.0.1:8545
        URL: https://metis-us-east-2-json.s3.us-east-2.amazonaws.com/addresses.json
        SEQUENCER_PRIVATE_KEY: "0x754fde3f5e60ef2c7649061e06957c29017fe21032a8017132c0078e37f6193c"
